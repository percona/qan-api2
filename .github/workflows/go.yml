name: Go

on: [push, pull_request]

jobs:
  test:
    name: Test
    strategy:
      matrix:
        go-version:
          - 1.16
          - tip
        include:
          - go-version: tip
            os: ubuntu-latest
            may-fail: true
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go release
      if: matrix.go-version != 'tip'
      uses: percona-platform/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Set up Go tip
      if: matrix.go-version == 'tip'
      env:
        # to avoid error due to `go version` accepting -v flag with an argument since 1.15
        GOFLAGS: ""
      run: |
        git clone --depth=1 https://go.googlesource.com/go $HOME/gotip
        cd $HOME/gotip/src
        ./make.bash
        echo "GOROOT=$HOME/gotip" >> $GITHUB_ENV
        echo "$HOME/gotip/bin" >> $GITHUB_PATH
    - name: Checkout code
      uses: percona-platform/checkout@v2
    - name: Prepare
      run: |
        make init gen format
        git status
        git diff --exit-code
    - name: Run checks
      run: |
        bin/golangci-lint run -c=.golangci-required.yml --out-format=line-number | env REVIEWDOG_GITHUB_API_TOKEN=${{ secrets.GITHUB_TOKEN }} bin/reviewdog -f=golangci-lint -level=error -reporter=github-pr-check
        bin/golangci-lint run -c=.golangci.yml --out-format=line-number | env REVIEWDOG_GITHUB_API_TOKEN=${{ secrets.GITHUB_TOKEN }} bin/reviewdog -f=golangci-lint -level=error -reporter=github-pr-review
        go run .github/check-license.go
    - name: Run Tests
      run: |
        make install
        make test-env-up
        make test-race
        make test-cover
    - name: Run debug commands on failure
      if: ${{ failure() }}
      run: |
        env
        go version
        go env
        pwd
        git status
